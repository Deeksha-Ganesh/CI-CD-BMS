1. Streamlined Web Application Deployment using Docker in AWS, Nginx
Tools:

AWS Server

Docker Engine

Nginx Web Server

Steps:

Launch an EC2 Instance (t2.medium)

Pull the source code from open source website

Then write the Dockerfile

Then install the Docker Engine in your server

Then build the docker image


-----------------------------------------------------------------------------------------------------------------------------------------------------------

2. Continuous Integration Implementation using Jenkins, Sonarqube, Git
Tools:

AWS EC2 Instance

AWS RDS for MySQL

Docker for building and running

Sonarqube for Testing

Steps:
→ Launch an EC2 Instance (t2.medium)
→ Then create RDS
→ Then install Jenkins
→ Install the Docker Engine
→ Then install the required plugins (Jenkins, Docker, Sonarqube Scanner, Pipeline Stage View)
→ Create an account in Sonar Cloud
→ Create Sonar Server in Jenkins
→ Install or create Sonar tool
→ Create a Jenkins pipeline
→ Then create a connection to Git and Jenkins
→ Then run your application

-----------------------------------------------------------------------------------------------------------------------------------------------------------

3. Application Deployment on Kubernetes Cluster utilizing EKS, AWS
Tools:

AWS EC2 Instance

AWS RDS for MySQL

Docker for building and running

SonarQube for Testing 

Eks for PAAS

Steps:
→ Launch an EC2 Instance (t2.medium)
→ Then create RDS
-> Include the crud application
-> Containerize the crud application. Create docker image etc.
-> Store the docker container to Docker hub.
-> Push the image to dockerhub.
-> Create the Kubernate cluster
-> Install required tools
-> Then do the deployment
-> SVC and accessing the application

------------------------------------------------------------------------------------------------------------------------------------------------------------
4. Automated Infrastructure Provisioning with Terraform
Tools:
Install Terraform and AWS CLI

Steps:
→ Launch an EC2 Instance
-> Then Install AWS CLI
-> Then install terraform
-> Then write the terraform script to create vpc, instance and Load Balancer
-> Then verify and test

------------------------------------------------------------------------------------------------------------------------------------------------------------

5. Deploying a scalable CRUD App using AWS Elastic Beanstalk
Tools:
Elastic Bean Stalk
AWS
Amazon RDS
VPC

Steps:
→ Launch an EC2 Instance
→ Then create RDS
-> Set up the environment
-> Then verify and test

------------------------------------------------------------------------------------------------------------------------------------------------------------
6. Implementing a static website hosting solution on Amazon S3

Tools:
AWS

Steps:
-> Launch an EC2 Instance

